//Button code
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};
Button.prototype.draw = function() {
    fill(255, 255, 255);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    text(this.label, this.x+6, this.y+this.height/1.5);
};
Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};
Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

//Start Time
var backButton = new Button ({
    x: 152,
    y: 322,
    width: 85,
    height: 40,
    label: "Go Back"
});

//Draws blackboard and boarders
var themeBackGround = function() {
    //The blackboard
    fill(214, 208, 180);
    rect(0,0,400,400);
    
    //Boarders
    fill(0, 0, 0);
    rect(0, 0, 10, 400);
    rect(390, 0, 10, 400);
    rect(0, 0, 400, 10);
    rect(0, 390, 400, 10);
    
    //Cornors
    fill(184, 53, 53);
    triangle(0, 0, 0, 43, 45, 1);
    triangle(356, 1, 400, 45, 400, 0);
    triangle(0, 361, 0, 400, 50, 400);
    triangle(400, 361, 401, 400, 350, 400);

};

var instructScreen = function(){

    themeBackGround();
    
    //Title
    fill(255, 0, 0);
    textSize(40);
    text("How to play!", 84, 100);

    //Back Button
    backButton.draw();

};
